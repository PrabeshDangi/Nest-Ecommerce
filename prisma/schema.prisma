// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

enum Size {
  sm
  m
  l
  xl
  xxl
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  phone     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cart      Cart[]
  role      UserRole   @default(user)
  Wishlist  Wishlist[]

  @@index([email])
  @@index([phone])
}

model Product {
  id            Int        @id @default(autoincrement())
  title         String
  price         Float
  image         String[]
  discounttag   Boolean?
  rating        Float
  discountprice Float?
  sizes         Size?
  returnpolicy  String
  description   String
  brand         String
  availability  Boolean
  categories    Category[] @relation("ProductCategories")
  Cart          Cart[]

  Wishlist Wishlist[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[] @relation("ProductCategories")
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Wishlist {
  id        Int     @id @default(autoincrement())
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}
